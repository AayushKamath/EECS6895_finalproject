{"version":3,"sources":["components/FormCard.js","components/App.js","index.js"],"names":["StockForm","useState","low","setLow","open","setOpen","volume","setVolume","high","setHigh","adjustedClose","setAdjustedClose","year","setYear","month","setMonth","day","setDay","responseMsg","setResponseMsg","handleSubmit","event","a","preventDefault","formData","FormData","append","console","log","Object","fromEntries","fetch","method","mode","body","response","ok","Error","json","data","prediction","error","className","onSubmit","type","value","onChange","target","style","id","marginLeft","justifyContent","alignItems","color","fontWeight","Navbar","App","stockName","setStockName","startDate","setStartDate","endDate","setEndDate","selectedAttribute","setSelectedAttribute","stockData","setStockData","filteredData","filter","currentDate","Date","date","start","end","openValue","returnPercentage","length","close","chartData","labels","map","datasets","label","borderColor","fill","htmlFor","toFixed","FormCard","ReactDOM","render","document","querySelector"],"mappings":"sPAyIeA,MAvIf,WAAsB,IAAD,EACGC,mBAAS,IADZ,mBACZC,EADY,KACPC,EADO,OAEKF,mBAAS,IAFd,mBAEZG,EAFY,KAENC,EAFM,OAGSJ,mBAAS,IAHlB,mBAGZK,EAHY,KAGJC,EAHI,OAIKN,mBAAS,IAJd,mBAIZO,EAJY,KAINC,EAJM,OAKuBR,mBAAS,IALhC,mBAKZS,EALY,KAKGC,EALH,OAMKV,mBAAS,IANd,mBAMZW,EANY,KAMNC,EANM,OAOOZ,mBAAS,IAPhB,mBAOZa,EAPY,KAOLC,EAPK,OAQGd,mBAAS,IARZ,mBAQZe,EARY,KAQPC,EARO,OASmBhB,mBAAS,IAT5B,mBASZiB,EATY,KASCC,EATD,KAWbC,EAAY,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,6DACnBD,EAAME,kBAEAC,EAAW,IAAIC,UACZC,OAAO,MAAOxB,GACvBsB,EAASE,OAAO,OAAQtB,GACxBoB,EAASE,OAAO,SAAUpB,GAC1BkB,EAASE,OAAO,OAAQlB,GACxBgB,EAASE,OAAO,gBAAiBhB,GACjCc,EAASE,OAAO,OAAQd,GACxBY,EAASE,OAAO,QAASZ,GACzBU,EAASE,OAAO,MAAOV,GACvBW,QAAQC,IAAIC,OAAOC,YAAYN,IAZZ,oBAcMO,MAAM,6BAA8B,CACzDC,OAAQ,OACRC,KAAM,OACNC,KAAMV,IAjBS,YAcXW,EAdW,QAoBHC,GApBG,uBAqBT,IAAIC,MAAM,8BArBD,yBAuBEF,EAASG,OAvBX,QAuBXC,EAvBW,OAwBjBZ,QAAQC,IAAIW,GACZpB,EAAeoB,EAAKC,YAEpBb,QAAQC,IAAI,oCA3BK,mDA8BjBD,QAAQc,MAAR,MA9BiB,2DAAH,sDAoClB,OACE,6BACJ,0BAAMC,UAAU,WAAWC,SAAUvB,GACnC,yBAAKsB,UAAU,eACb,+DAEE,2BACEE,KAAK,OACLC,MAAO3C,EACP4C,SAAU,SAACzB,GAAD,OAAWlB,EAAOkB,EAAM0B,OAAOF,WAG7C,6CAEE,2BACED,KAAK,OACLC,MAAOzC,EACP0C,SAAU,SAACzB,GAAD,OAAWhB,EAAQgB,EAAM0B,OAAOF,WAG9C,+CAEE,2BACED,KAAK,OACLC,MAAOvC,EACPwC,SAAU,SAACzB,GAAD,OAAWd,EAAUc,EAAM0B,OAAOF,WAGhD,mDAEE,2BACED,KAAK,OACLC,MAAOrC,EACPsC,SAAU,SAACzB,GAAD,OAAWZ,EAAQY,EAAM0B,OAAOF,YAIhD,yBAAKH,UAAU,eACb,0DAEE,2BACEE,KAAK,OACLC,MAAOnC,EACPoC,SAAU,SAACzB,GAAD,OAAWV,EAAiBU,EAAM0B,OAAOF,WAGvD,mDAEE,2BACED,KAAK,OACLC,MAAOjC,EACPkC,SAAU,SAACzB,GAAD,OAAWR,EAAQQ,EAAM0B,OAAOF,WAG9C,oDAEE,2BACED,KAAK,OACLC,MAAO/B,EACPgC,SAAU,SAACzB,GAAD,OAAWN,EAASM,EAAM0B,OAAOF,WAG/C,wDAEE,2BACED,KAAK,OACLC,MAAO7B,EACP8B,SAAU,SAACzB,GAAD,OAAWJ,EAAOI,EAAM0B,OAAOF,YAI/C,yBAAKG,MAAO,CAAC,QAAW,SACxB,4BAAQN,UAAU,UAAUM,MAAO,CAAC,eAAgB,MAAOJ,KAAK,UAAhE,aAIF,yBAAKK,GAAG,aAAaD,MAAO,CAAEE,WAAY,UACvChC,GACC,uBAAG8B,MAAO,CAAEE,WAAY,QAASC,eAAgB,SAAUC,WAAY,SAAUC,MAAO,OAAQC,WAAY,SAA5G,aACapC,MC1HjB,SAASqC,IACP,OACE,yBAAKb,UAAU,WAkHJc,MA5Gf,WAAgB,IAAD,MACqBvD,mBAAS,QAD9B,mBACNwD,EADM,KACKC,EADL,OAEqBzD,mBAAS,IAF9B,mBAEN0D,EAFM,KAEKC,EAFL,OAGiB3D,mBAAS,IAH1B,mBAGN4D,EAHM,KAGGC,EAHH,OAIqC7D,mBAAS,SAJ9C,mBAIN8D,EAJM,KAIaC,EAJb,OAKqB/D,mBAAS,IAL9B,mBAKNgE,EALM,KAKKC,EALL,KAOP9C,EAAY,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,6DACnBD,EAAME,iBADa,kBAGMQ,MAAM,uCAAD,OAAwC0B,EAAxC,KAAsD,CAChFxB,KAAM,SAJS,cAGXE,EAHW,gBAMEA,EAASG,OANX,OAMXC,EANW,OAOjB2B,EAAa3B,GAPI,kDASjBZ,QAAQc,MAAR,MATiB,0DAAH,sDAaZ0B,EAAeF,EAAUG,QAAO,SAAC7B,GACrC,IAAKoB,IAAcE,EACjB,OAAO,EAET,IAAMQ,EAAc,IAAIC,KAAK/B,EAAKgC,MAC5BC,EAAQ,IAAIF,KAAKX,GACjBc,EAAM,IAAIH,KAAKT,GACrB,OAAOQ,GAAeG,GAASH,GAAeI,KAG1CC,EAAS,UAAGP,EAAa,UAAhB,aAAG,EAAiB/D,KAE7BuE,IADU,UAAGR,EAAaA,EAAaS,OAAS,UAAtC,aAAG,EAAuCC,OAClBH,GAAaA,EAAa,IAE5DI,EAAY,CAChBC,OAAQZ,EAAaa,KAAI,SAACzC,GAAD,OAAUA,EAAKgC,QACxCU,SAAU,CACR,CACEC,MAAOnB,EACPxB,KAAM4B,EAAaa,KAAI,SAACzC,GAAD,OAAUA,EAAKwB,MACtCoB,YAAa,OACbC,MAAM,KAKZ,OACE,yBAAK1C,UAAU,OACb,kBAACa,EAAD,MACA,0BAAMZ,SAAUvB,EAAcsB,UAAU,eACtC,2BAAO2C,QAAQ,aAAf,qBACA,2BACEzC,KAAK,OACLK,GAAG,YACHJ,MAAOY,EACPX,SAAU,SAACzB,GAAD,OAAWqC,EAAarC,EAAM0B,OAAOF,UAEjD,6BACA,2BAAOwC,QAAQ,aAAf,eACA,2BACEzC,KAAK,OACLK,GAAG,YACHJ,MAAOc,EACPb,SAAU,SAACzB,GAAD,OAAWuC,EAAavC,EAAM0B,OAAOF,UAEjD,6BACA,2BAAOwC,QAAQ,WAAf,aACA,2BACEzC,KAAK,OACLK,GAAG,UACHJ,MAAOgB,EACPf,SAAU,SAACzB,GAAD,OAAWyC,EAAWzC,EAAM0B,OAAOF,UAE/C,6BACA,2BAAOwC,QAAQ,qBAAf,qBACA,4BACEpC,GAAG,oBACHJ,MAAOkB,EACPjB,SAAU,SAACzB,GAAD,OAAW2C,EAAqB3C,EAAM0B,OAAOF,SAEzD,6BACE,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,OAAd,OACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,UAAd,WAEF,4BAAQD,KAAK,UAAb,WAEDuB,EAAaS,OAAS,EACrB,yBAAKlC,UAAU,mBACb,yBAAKA,UAAU,oBACb,uBAAGA,UAAU,eAAb,sBAA8C,0BAAMA,UAAU,gBAAgBiC,EAAiBW,QAAQ,GAAzD,OAEhD,kBAAC,IAAD,CAAM/C,KAAMuC,KAGd,uBAAG9B,MAAO,CAACK,MAAO,UAAlB,yBAAmDI,GAEvD,yBAAKf,UAAU,aACb,kBAAC6C,EAAD,SC9GNC,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,cAAc,W","file":"static/js/main.3a63c86a.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nfunction StockForm() {\n  const [low, setLow] = useState(\"\");\n  const [open, setOpen] = useState(\"\");\n  const [volume, setVolume] = useState(\"\");\n  const [high, setHigh] = useState(\"\");\n  const [adjustedClose, setAdjustedClose] = useState(\"\");\n  const [year, setYear] = useState(\"\");\n  const [month, setMonth] = useState(\"\");\n  const [day, setDay] = useState(\"\");\n  const [responseMsg, setResponseMsg] = useState(\"\");\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n  \n    const formData = new FormData();\n    formData.append(\"low\", low);\n    formData.append(\"open\", open);\n    formData.append(\"volume\", volume);\n    formData.append(\"high\", high);\n    formData.append(\"adjustedClose\", adjustedClose);\n    formData.append(\"year\", year);\n    formData.append(\"month\", month);\n    formData.append(\"day\", day);\n    console.log(Object.fromEntries(formData));\n    try {\n      const response = await fetch(\"http://127.0.0.1:8000/api/\", {\n        method: \"POST\",\n        mode: \"cors\",\n        body: formData,\n      });\n  \n      if (!response.ok) {\n        throw new Error(\"Failed to submit form data\");\n      }\n      const data = await response.json();\n      console.log(data)\n      setResponseMsg(data.prediction);\n      // Handle success\n      console.log(\"Form data submitted successfully\");\n    } catch (error) {\n      // Handle error\n      console.error(error);\n    }\n  };\n  \n\n\n  return (\n    <div>\n<form className=\"easyform\" onSubmit={handleSubmit}>\n  <div className=\"input-group\">\n    <label>\n      Low:&ensp;&ensp;&ensp; &ensp; \n      <input\n        type=\"text\"\n        value={low}\n        onChange={(event) => setLow(event.target.value)}\n      />\n    </label>\n    <label>\n      Open:&ensp;\n      <input\n        type=\"text\"\n        value={open}\n        onChange={(event) => setOpen(event.target.value)}\n      />\n    </label>\n    <label>\n      Volume:&ensp;\n      <input\n        type=\"text\"\n        value={volume}\n        onChange={(event) => setVolume(event.target.value)}\n      />\n    </label>\n    <label>\n      High:&ensp;&ensp;\n      <input\n        type=\"text\"\n        value={high}\n        onChange={(event) => setHigh(event.target.value)}\n      />\n    </label>\n  </div>\n  <div className=\"input-group\">\n    <label>\n      Close:&ensp;&ensp;&ensp; \n      <input\n        type=\"text\"\n        value={adjustedClose}\n        onChange={(event) => setAdjustedClose(event.target.value)}\n      />\n    </label>\n    <label>\n      Year:&ensp;&ensp;\n      <input\n        type=\"text\"\n        value={year}\n        onChange={(event) => setYear(event.target.value)}\n      />\n    </label>\n    <label>\n      Month:&ensp;&ensp;\n      <input\n        type=\"text\"\n        value={month}\n        onChange={(event) => setMonth(event.target.value)}\n      />\n    </label>\n    <label>\n      Day:&ensp;&ensp;&ensp; \n      <input\n        type=\"text\"\n        value={day}\n        onChange={(event) => setDay(event.target.value)}\n      />\n    </label>\n  </div>\n  <div style={{\"padding\": \"10px\"}}>\n  <button className=\"predict\" style={{\"margin-right\": \"40\"}} type=\"submit\">Predict</button>\n  </div>\n</form>\n\n<div id=\"prediction\" style={{ marginLeft: \"140px\"}}>\n  {responseMsg && (\n    <p style={{ marginLeft: \"100px\" ,justifyContent: \"center\", alignItems: \"center\", color: \"blue\", fontWeight: \"bold\" }}>\n      Accuracy: {responseMsg}\n    </p>\n  )}\n</div>\n\n    </div>\n  );\n}\n\nexport default StockForm;\n","\nimport React, { useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport '../css/App.css';\nimport FormCard from './FormCard';\n\nfunction Navbar() {\n  return (\n    <nav className=\"navbar\">\n      {/* <div className=\"navbar-brand\">AnalyzeStock</div> */}\n    </nav>\n  );\n}\n\nfunction App() {\n  const [stockName, setStockName] = useState('AAPL');\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [selectedAttribute, setSelectedAttribute] = useState('close');\n  const [stockData, setStockData] = useState([]);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const response = await fetch(`http://127.0.0.1:8000/api/stockdata/${stockName}/`, {\n        mode: 'cors'\n      });\n      const data = await response.json();\n      setStockData(data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const filteredData = stockData.filter((data) => {\n    if (!startDate || !endDate) {\n      return true;\n    }\n    const currentDate = new Date(data.date);\n    const start = new Date(startDate);\n    const end = new Date(endDate);\n    return currentDate >= start && currentDate <= end;\n  });\n\n  const openValue = filteredData[0]?.open;\n  const closeValue = filteredData[filteredData.length - 1]?.close;\n  const returnPercentage = ((closeValue - openValue) / openValue) * 100;\n\n  const chartData = {\n    labels: filteredData.map((data) => data.date),\n    datasets: [\n      {\n        label: selectedAttribute,\n        data: filteredData.map((data) => data[selectedAttribute]),\n        borderColor: 'blue',\n        fill: false,\n      },\n    ],\n  };\n\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <form onSubmit={handleSubmit} className=\"search-form\">\n        <label htmlFor=\"stockName\">Enter Stock Name:</label>\n        <input\n          type=\"text\"\n          id=\"stockName\"\n          value={stockName}\n          onChange={(event) => setStockName(event.target.value)}\n        />\n        <br/>\n        <label htmlFor=\"startDate\">Start Date:</label>\n        <input\n          type=\"date\"\n          id=\"startDate\"\n          value={startDate}\n          onChange={(event) => setStartDate(event.target.value)}\n        />\n        <br/>\n        <label htmlFor=\"endDate\">End Date:</label>\n        <input\n          type=\"date\"\n          id=\"endDate\"\n          value={endDate}\n          onChange={(event) => setEndDate(event.target.value)}\n        />\n        <br/>\n        <label htmlFor=\"selectedAttribute\">Select Attribute:</label>\n        <select\n          id=\"selectedAttribute\"\n          value={selectedAttribute}\n          onChange={(event) => setSelectedAttribute(event.target.value)}\n        >\n        <br/>\n          <option value=\"open\">Open</option>\n          <option value=\"high\">High</option>\n          <option value=\"low\">Low</option>\n          <option value=\"close\">Close</option>\n          <option value=\"volume\">Volume</option>\n        </select>\n        <button type=\"submit\">Submit</button>\n      </form>\n      {filteredData.length > 0 ? (\n        <div className=\"chart-container\">\n          <div className=\"result-container\">\n            <p className=\"result-text\">Return Percentage: <span className=\"result-value\">{returnPercentage.toFixed(2)}%</span></p>\n          </div>\n          <Line data={chartData} />\n        </div>\n      ) : (\n        <p style={{color: \"black\"}}>No data available for {stockName}</p>\n      )}\n    <div className=\"form-card\">\n      <FormCard />\n    </div>\n\n    </div>\n    \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n    <App/>,\n    document.querySelector(\"#root\")\n);"],"sourceRoot":""}